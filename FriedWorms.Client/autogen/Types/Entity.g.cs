// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    [SpacetimeDB.Type]
    [DataContract]
    public sealed partial class Entity
    {
        [DataMember(Name = "Id")]
        public uint Id;
        [DataMember(Name = "PlayerId")]
        public uint PlayerId;
        [DataMember(Name = "Position")]
        public DbVector2 Position;
        [DataMember(Name = "Velocity")]
        public DbVector2 Velocity;
        [DataMember(Name = "Acceleration")]
        public DbVector2 Acceleration;
        [DataMember(Name = "ShootingAngle")]
        public float ShootingAngle;
        [DataMember(Name = "ExtraGravityForce")]
        public float ExtraGravityForce;
        [DataMember(Name = "Radius")]
        public float Radius;
        [DataMember(Name = "Stable")]
        public bool Stable;
        [DataMember(Name = "Friction")]
        public float Friction;
        [DataMember(Name = "MaxHealth")]
        public float MaxHealth;
        [DataMember(Name = "Health")]
        public float Health;
        [DataMember(Name = "DeathTimer")]
        public float DeathTimer;
        [DataMember(Name = "SoundIdx")]
        public int SoundIdx;
        [DataMember(Name = "MaxBounceCount")]
        public int MaxBounceCount;
        [DataMember(Name = "Dead")]
        public bool Dead;
        [DataMember(Name = "CustomColorIndex")]
        public byte CustomColorIndex;
        [DataMember(Name = "ModelData")]
        public uint ModelData;

        public Entity(
            uint Id,
            uint PlayerId,
            DbVector2 Position,
            DbVector2 Velocity,
            DbVector2 Acceleration,
            float ShootingAngle,
            float ExtraGravityForce,
            float Radius,
            bool Stable,
            float Friction,
            float MaxHealth,
            float Health,
            float DeathTimer,
            int SoundIdx,
            int MaxBounceCount,
            bool Dead,
            byte CustomColorIndex,
            uint ModelData
        )
        {
            this.Id = Id;
            this.PlayerId = PlayerId;
            this.Position = Position;
            this.Velocity = Velocity;
            this.Acceleration = Acceleration;
            this.ShootingAngle = ShootingAngle;
            this.ExtraGravityForce = ExtraGravityForce;
            this.Radius = Radius;
            this.Stable = Stable;
            this.Friction = Friction;
            this.MaxHealth = MaxHealth;
            this.Health = Health;
            this.DeathTimer = DeathTimer;
            this.SoundIdx = SoundIdx;
            this.MaxBounceCount = MaxBounceCount;
            this.Dead = Dead;
            this.CustomColorIndex = CustomColorIndex;
            this.ModelData = ModelData;
        }

        public Entity()
        {
            this.Position = new();
            this.Velocity = new();
            this.Acceleration = new();
        }
    }
}
